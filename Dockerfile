# Multi-stage build –¥–ª—è SS13 TGStation –Ω–∞ Railway
# Stage 1: Builder - —Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
FROM tgstation/byond:515 as builder

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
WORKDIR /app

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js –¥–ª—è TGUI (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ –Ω–æ–≤—ã–π)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y --no-install-recommends nodejs \
    && rm -rf /var/lib/apt/lists/*

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Å–±–æ—Ä–∫–∏ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–ª—è Docker cache)
COPY package*.json ./
COPY tools/ ./tools/
COPY tgui/ ./tgui/

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bun –¥–ª—è TGUI —Å–±–æ—Ä–∫–∏
RUN curl -fsSL https://bun.sh/install | bash && \
    ln -s /root/.bun/bin/bun /usr/local/bin/bun

# –ö–æ–ø–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–∏
COPY . .

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
RUN echo "=== BUILDING TGUI ===" && \
    node tools/build/build.js tgui --skip-icon-cutter && \
    echo "=== BUILDING DM ===" && \
    node tools/build/build.js dm --skip-icon-cutter && \
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–±–æ—Ä–∫–∏
    if [ -f "tgstation.dmb" ]; then \
        echo "‚úÖ BUILD SUCCESS: tgstation.dmb created"; \
        ls -lh tgstation.dmb; \
    else \
        echo "‚ùå BUILD FAILED: tgstation.dmb not found"; \
        exit 1; \
    fi

# Stage 2: Runtime - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
FROM tgstation/byond:515 as runtime

# –°–æ–∑–¥–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
WORKDIR /app

# –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –∏–∑ builder stage
COPY --from=builder /app/tgstation.dmb ./
COPY --from=builder /app/tgstation.rsc ./
COPY --from=builder /app/config/ ./config/
COPY --from=builder /app/data/ ./data/
COPY --from=builder /app/maps/ ./maps/
COPY --from=builder /app/sound/ ./sound/
COPY --from=builder /app/icons/ ./icons/
COPY --from=builder /app/tgui/public/ ./tgui/public/

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω—É–∂–Ω—ã)
RUN mkdir -p /app/data/logs /app/data/player_saves

# –°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π startup script
RUN cat > /app/start_server.sh << 'EOF'
#!/bin/bash
set -e

echo "üöÄ Starting SS13 TGStation Server"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .dmb —Ñ–∞–π–ª–∞
if [ ! -f "tgstation.dmb" ]; then
    echo "‚ùå ERROR: tgstation.dmb not found"
    ls -la
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
DMB_SIZE=$(stat -f%z tgstation.dmb 2>/dev/null || stat -c%s tgstation.dmb 2>/dev/null || echo "0")
if [ "$DMB_SIZE" -lt 1000000 ]; then
    echo "‚ùå ERROR: tgstation.dmb seems too small ($DMB_SIZE bytes)"
    exit 1
fi

echo "‚úÖ Found tgstation.dmb (${DMB_SIZE} bytes)"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Railway
export PORT=${PORT:-1337}
export BYOND_WORLD_LOG="/app/data/logs/world.log"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p /app/data/logs

echo "üåê Starting server on port $PORT"
echo "üìÅ Working directory: $(pwd)"
echo "üóÇÔ∏è  Files in directory:"
ls -la

# –ó–∞–ø—É—Å–∫–∞–µ–º DreamDaemon
exec DreamDaemon tgstation.dmb -port $PORT -trusted -verbose -log /app/data/logs/server.log
EOF

# –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
RUN chmod +x /app/start_server.sh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Railway security)
RUN useradd -m -u 1001 ss13user && \
    chown -R ss13user:ss13user /app
USER ss13user

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç (Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç)
EXPOSE $PORT

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD pgrep -f "DreamDaemon" || exit 1

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞
CMD ["/app/start_server.sh"]
